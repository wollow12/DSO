version: 2.1
orbs:
  python: circleci/python@2.0.3
  discord: antonioned/discord@0.1.0
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: cimg/base:2024.05
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
 #     - run:
 #         name: Build Docker image
 #         command: |
 #           TAG=0.1.$CIRCLE_BUILD_NUM
 #           docker build -t $DOCKERHUB_USERNAME/circleci-new-docker-example:$TAG .
       - run:
          name: Build Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker compose up -d
  #    - discord/status:
  #        fail_only: false
  #        failure_message: "**${CIRCLE_USERNAME}**'s build: **${CIRCLE_JOB}** failed."
  #        success_message: "**${CIRCLE_USERNAME}** deployed api to prod."
  #        webhook: "${DISCORD_STATUS_WEBHOOK}"
      - run:
          name: Push to GITLAB
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            echo "$GITLAB_TOKEN" | docker login registry.gitlab.com -u 44kpuk44 --password-stdin
            docker build -t registry.gitlab.com/44kpuk44/circleci:$TAG .
            docker push registry.gitlab.com/44kpuk44/circleci:$TAG
#  test: # this can be any name you choose
#    executor: python/default # use the default executor defined within the orb
#    steps:
#      - checkout # checkout source code
#      - python/install-packages:
#         pkg-manager: pip
#      - run:
#          name: Run tests
#          command: python check_webapp_reachability.py
#      - persist_to_workspace:
#          root: ~/project
#          paths:
#            - .
workflows:
  build_test_deploy:
    jobs:
      - build
 #     - test
